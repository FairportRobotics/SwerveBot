plugins {
    id "java"
    id "eclipse"
   // id "edu.wpi.first.GradleRIO" version "2018.06.21"
    id "edu.wpi.first.GradleRIO" version "2019.0.0-alpha-3"
}

allprojects {
    apply plugin: "idea"
    apply plugin: "eclipse"

    repositories {
        mavenCentral()
        maven {
            url 'http://first.wpi.edu/FRC/roborio/maven/release'
        }

        maven {
            url 'https://jitpack.io'
        }
    }
}


def TEAM = 578
def ROBOT_CLASS = "team578.robot.Robot"

// Define my targets (RoboRIO) and artifacts (deployable files)
// This is added by GradleRIO's backing project EmbeddedTools.
deploy {
    targets {
        target("roborio", edu.wpi.first.gradlerio.frc.RoboRIO) {
            // Team can be overridden by command line, for use with VSCode
            team = getTeamOrDefault(TEAM)
        }
    }
    artifacts {
        artifact('frcJava', edu.wpi.first.gradlerio.frc.FRCJavaArtifact) {
            targets << "roborio"
            // Debug can be overridden by command line, for use with VSCode
            debug = getDebugOrDefault(false)
        }
    }
}

// Defining my dependencies. In this case, WPILib (+ friends), CTRE Toolsuite (Talon SRX)
// and NavX.
dependencies {
    compile wpilib()
    compile ctre()
    compile navx()
    compile pathfinder()
    
    compile 'org.apache.logging.log4j:log4j-api:2.+'
    compile 'org.apache.logging.log4j:log4j-core:2.+'
}

// Setting up my Jar File. In this case, adding all libraries into the main jar ('fat jar')
// in order to make them all available at runtime. Also adding the manifest so WPILib
// knows where to look for our Robot Class.
jar {
    from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    manifest edu.wpi.first.gradlerio.GradleRIOPlugin.javaManifest(ROBOT_CLASS)
}

// run ./gradlew wrapper
task wrapper(type: Wrapper) {
    // gradleVersion = '4.9'
    gradleVersion = '4.9'
}
